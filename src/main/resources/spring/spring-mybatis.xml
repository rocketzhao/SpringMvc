<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 未实现读取配置文件并使用其中参数 -->
	<!-- 将配置文件读取到容器中，交给Spring管理 -->
	<!-- 将多个配置文件位置放到列表中，这里支持多种寻址方式：classpath和file，推荐使用file的方式引入，这样可以将配置和代码分离 -->
	<!-- 1.1.middleware datasource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 1.2.transaction, 事务管理 : DataSourceTransactionManager -->
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 1.3.enable autowire -->
	<context:annotation-config />

	<!-- 1.4.enable transaction demarcation with annotations, 使用声明式事务 -->
	<tx:annotation-driven />

	<!-- 2.1. define the SqlSessionFactory -->
	<!-- To create the factory bean, put the following in the Spring XML configuration 
		file -->
	<!-- http://mybatis.github.io/spring/factorybean.html -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.javahash.spring.domain" />
		<!-- <property name="configLocation" value="classpath:persist/mybatis-config.xml" 
			/> -->
		<property name="mapperLocations" value="classpath*:persist/mappers/*.xml" />
	</bean>

	<!-- 2.2.scan for mappers and let them be autowired -->
	<!-- https://mybatis.github.io/spring/zh/mappers.html#MapperFactoryBean,
		 http://www.oschina.net/question/188964_32305?sort=default&p=1#answers 
		注意配置方式：SqlSessionFactory不能用ref -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.javahash.spring.persist" />
		<property name="sqlSessionFactoryBeanName" value="SqlSessionFactory" />
	</bean>


</beans>